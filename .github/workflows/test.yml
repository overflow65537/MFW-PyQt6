name: test

on:
  push:
    tags:
      - "v*"
  pull_request:  
    branches:    
      - main    
  workflow_dispatch:

jobs:


  meta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: set_tag
        run: |
          is_release=${{ startsWith(github.ref, 'refs/tags/v') }}
          tag=$(git describe --tags --match "v*" ${{ github.ref }} || true)
          if [[ $tag != v* ]]; then
            tag=$(curl -sX GET "https://api.github.com/repos/${{ github.repository }}/releases/latest" --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' | awk '/tag_name/{print $4}' FS='["]')
            if [[ $tag != v* ]]; then
              tag="v0.0.0"
            fi
            tag=$(date "+$tag-%y%m%d-$(git rev-parse --short HEAD)")
          fi
          if ! $is_release ; then
            prefix=${tag%-*-*}
            suffix=${tag#$prefix-}
            tag="$prefix-ci.$suffix"
          fi

          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "is_release=$is_release" >> $GITHUB_OUTPUT
        shell: bash

    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
      is_release: ${{ steps.set_tag.outputs.is_release }}

  pyinstaller:
    needs: meta
    name: pyinstaller Build (${{ matrix.platform }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include: 
          - platform: macos
            runs-on: macos-latest
            arch: x86_64
          - platform: macos
            runs-on: macos-latest
            arch: aarch64
          - platform: linux
            runs-on: ubuntu-latest
            arch: x86_64
          - platform: linux
            runs-on: ubuntu-latest
            arch: aarch64
          - platform: win
            runs-on: windows-latest
            arch: x86_64
          - platform: win
            runs-on: windows-latest
            arch: aarch64
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r ./requirements.txt

      - name: Install
        run: |
          python ./build_pyinstaller.py ${{ matrix.platform }} ${{ matrix.arch }} ${{ needs.meta.outputs.tag }}
        shell: pwsh  
        
      - name: test MFW win
        if: ${{ matrix.platform == 'win' }}
        run: |
          cd dist/MFW
          ./MFW
        shell: pwsh   

      - name: test MFW linux
        if: ${{ matrix.platform =='linux' }}
        run: |
          cd dist/MFW
          chmod +x ./MFW
          ./MFW
        shell: pwsh

      - name: test MFW macos
        if: ${{ matrix.platform == 'macos' }}
        run: |
          cd dist/MFW
          chmod +x ./MFW
          ./MFW
        shell: pwsh


